<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.1.0.RELEASE</version>
    <relativePath>../../pom.kts</relativePath>
  </parent>
  <groupId>com.example</groupId>
  <artifactId>polyglot-demo</artifactId>
  <version>${revision}</version>
  <name>Polyglot :: Kotlin :: Demo</name>
  <description>A demo of Maven Polyglot with Kotlin</description>
  <licenses>
    <license>
      <name>The Eclipse Public License, Version 1.0</name>
      <url>http://www.eclipse.org/legal/epl-v10.html</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <properties>
    <java.version>11</java.version>
    <kotlin.version>1.3.31</kotlin.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <release.version>1.0.0-SNAPSHOT</release.version>
    <revision>${release.version}</revision>
    <spring-boot-admin.version>2.1.1</spring-boot-admin.version>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-bom</artifactId>
        <version>${kotlin.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-cache</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-hateoas</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-oauth2-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>de.codecentric</groupId>
      <artifactId>spring-boot-admin-starter-client</artifactId>
      <version>${spring-boot-admin.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>de.codecentric</groupId>
      <artifactId>spring-boot-admin-starter-server</artifactId>
      <version>${spring-boot-admin.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-test-junit</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>
  <repositories>
    <repository>
      <releases>
        <checksumPolicy>fail</checksumPolicy>
      </releases>
      <snapshots>
        <checksumPolicy>warn</checksumPolicy>
      </snapshots>
      <id>mvn-main-repo</id>
      <name>Demo Main Repository</name>
      <url>https://repo.example.com/mvn-main-repo</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <releases>
        <checksumPolicy>warn</checksumPolicy>
      </releases>
      <snapshots>
        <checksumPolicy>ignore</checksumPolicy>
      </snapshots>
      <id>mvn-plugin-repo</id>
      <name>Demo Plugin Repository</name>
      <url>https://repo.example.com/mvn-plugin-repo</url>
    </pluginRepository>
  </pluginRepositories>
  <build>
    <extensions>
      <extension>
        <groupId>com.example.extensions</groupId>
        <artifactId>custom-application-lifecycle</artifactId>
      </extension>
    </extensions>
    <defaultGoal>clean verify</defaultGoal>
    <finalName>${project.artifactId}</finalName>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-enforcer-plugin</artifactId>
          <executions>
            <execution>
              <id>enforce-revision-is-set</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <version>[3.5,)</version>
                  </requireMavenVersion>
                  <requireJavaVersion>
                    <version>[1.8,9.0)</version>
                  </requireJavaVersion>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${maven-failsafe-plugin.version}</version>
          <executions>
            <execution>
              <phase>none</phase>
            </execution>
          </executions>
          <configuration>
            <testFailureIgnore>true</testFailureIgnore>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.jetbrains.kotlin</groupId>
          <artifactId>kotlin-maven-plugin</artifactId>
          <version>${kotlin.version}</version>
          <executions>
            <execution>
              <id>compile</id>
              <phase>compile</phase>
              <goals>
                <goal>compile</goal>
              </goals>
            </execution>
            <execution>
              <id>test-compile</id>
              <phase>test-compile</phase>
              <goals>
                <goal>test-compile</goal>
              </goals>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>org.jetbrains.kotlin</groupId>
              <artifactId>kotlin-maven-allopen</artifactId>
              <version>${kotlin.version}</version>
            </dependency>
            <dependency>
              <groupId>org.jetbrains.kotlin</groupId>
              <artifactId>kotlin-maven-noarg</artifactId>
              <version>${kotlin.version}</version>
            </dependency>
          </dependencies>
          <configuration>
            <jvmTarget>1.8</jvmTarget>
            <javaParameters>true</javaParameters>
            <compilerPlugins>
              <plugin>spring</plugin>
              <plugin>jpa</plugin>
            </compilerPlugins>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <executions>
            <execution>
              <id>default-compile</id>
              <phase>none</phase>
            </execution>
            <execution>
              <id>default-testCompile</id>
              <phase>none</phase>
            </execution>
            <execution>
              <id>java-compile</id>
              <phase>compile</phase>
              <goals>
                <goal>compile</goal>
              </goals>
            </execution>
            <execution>
              <id>java-test-compile</id>
              <phase>test-compile</phase>
              <goals>
                <goal>testCompile</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>io.takari.polyglot</groupId>
        <artifactId>polyglot-maven-plugin</artifactId>
        <version>@{takari-polyglot-version}</version>
        <executions>
          <execution>
            <id>hello</id>
            <phase>validate</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <taskId>hello</taskId>
              <nativePom>pom.kts</nativePom>
            </configuration>
          </execution>
          <execution>
            <id>hello</id>
            <phase>compile</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <taskId>hello</taskId>
              <nativePom>pom.kts</nativePom>
            </configuration>
          </execution>
          <execution>
            <id>hello</id>
            <phase>test-compile</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <taskId>hello</taskId>
              <nativePom>pom.kts</nativePom>
            </configuration>
          </execution>
          <execution>
            <id>hello</id>
            <phase>test</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <taskId>hello</taskId>
              <nativePom>pom.kts</nativePom>
            </configuration>
          </execution>
          <execution>
            <id>hello</id>
            <phase>package</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <taskId>hello</taskId>
              <nativePom>pom.kts</nativePom>
            </configuration>
          </execution>
          <execution>
            <id>hello</id>
            <phase>integration-test</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <taskId>hello</taskId>
              <nativePom>pom.kts</nativePom>
            </configuration>
          </execution>
          <execution>
            <id>hello</id>
            <phase>verify</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <taskId>hello</taskId>
              <nativePom>pom.kts</nativePom>
            </configuration>
          </execution>
          <execution>
            <id>hello</id>
            <phase>install</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <taskId>hello</taskId>
              <nativePom>pom.kts</nativePom>
            </configuration>
          </execution>
          <execution>
            <id>hello</id>
            <phase>deploy</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <taskId>hello</taskId>
              <nativePom>pom.kts</nativePom>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>io.takari.polyglot</groupId>
            <artifactId>polyglot-kotlin</artifactId>
            <version>@{takari-polyglot-version}</version>
          </dependency>
        </dependencies>
        <inherited>false</inherited>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>release</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <artifactId>maven-enforcer-plugin</artifactId>
              <executions>
                <execution>
                  <id>enforce-revision-is-set</id>
                  <goals>
                    <goal>enforce</goal>
                  </goals>
                  <configuration>
                    <rules>
                      <requireProperty>
                        <property>release.version</property>
                        <regex>v\d{4}\.\d{2}\.\d{2}</regex>
                      </requireProperty>
                    </rules>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>code-coverage</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.2</version>
            <executions>
              <execution>
                <id>prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>prepare-agent-integration</id>
                <goals>
                  <goal>prepare-agent-integration</goal>
                </goals>
              </execution>
              <execution>
                <id>reports</id>
                <goals>
                  <goal>report</goal>
                  <goal>report-integration</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
